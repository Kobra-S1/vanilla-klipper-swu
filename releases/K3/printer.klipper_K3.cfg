[include mainsail.cfg]
[exclude_object]
[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[virtual_sdcard]
path: /useremain/app/gk/gcodes/


[mcu]
serial: /dev/ttyS3
restart_method: command
baud: 576000

[mcu nozzle_mcu]
serial: /dev/ttyS0
restart_method: command
baud: 576000

[printer]
kinematics: cartesian
max_velocity:600
max_accel:20000
max_accel_to_decel:20000
square_corner_velocity:20.0
max_z_velocity:20
max_z_accel:3000

[stepper_x]
step_pin: PA5
dir_pin: PA4
enable_pin: !PC3
microsteps: 16
full_steps_per_rotation:200
rotation_distance:32
position_endstop:278.5
position_min: -19.5
position_max: 278.5
homing_speed: 30
homing_retract_dist:0
second_homing_speed:30
endstop_pin: tmc2209_stepper_x:virtual_endstop

[stepper_y]
step_pin: PC4
dir_pin: !PA7
enable_pin: !PC3
microsteps: 16
full_steps_per_rotation:200
rotation_distance:32
position_endstop: -6
position_min: -6
position_max: 260
homing_speed: 20
homing_retract_dist:0
second_homing_speed:20
endstop_pin: tmc2209_stepper_y:virtual_endstop

[stepper_z]
step_pin: PC9
dir_pin: PB1
enable_pin: !PC3
microsteps: 16
rotation_distance:8
full_steps_per_rotation:200
endstop_pin: probe:z_virtual_endstop
position_min:-4
position_max: 262
homing_speed: 6
homing_retract_dist:4
second_homing_speed:3

[extruder]
max_extrude_only_distance: 100.0
step_pin: nozzle_mcu:PC14
dir_pin: nozzle_mcu:PC15
enable_pin: !nozzle_mcu:PC13
microsteps: 16
full_steps_per_rotation:200
rotation_distance:6.426
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section:50
heater_pin: nozzle_mcu:PB8
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: nozzle_mcu:PA0
control: pid
pid_Kp: 19.026
pid_Ki: 0.893
pid_Kd: 101.311
min_temp: -200
min_extrude_temp: 170
max_temp: 320
pressure_advance: 0.02

[heater_bed]
heater_pin: PA0
sensor_type: NTC 100K beta 3950
sensor_pin: PC0
control: pid
pid_Kp: 63.575
pid_Ki: 1.054
pid_Kd: 958.388
min_temp: -200
max_temp: 120

[tmc2209 stepper_x]
uart_pin: PA3
uart_address: 3
run_current: 1.5
hold_current:1.1
sense_resistor: 0.0750
stealthchop_threshold:0
interpolate: True
driver_SGTHRS:72
diag_pin: PA6

[tmc2209 stepper_y]
uart_pin: PA3
uart_address: 1
run_current: 1.7
hold_current:0.8
sense_resistor: 0.075
stealthchop_threshold:0
interpolate: True
driver_SGTHRS:62
diag_pin: PC5

[tmc2209 stepper_z]
uart_pin: PA3
uart_address: 2
run_current: 1.4
hold_current:0.7
sense_resistor: 0.0750
stealthchop_threshold: 99999
interpolate: True
driver_MULTISTEP_FILT:False

[tmc2209 extruder]
uart_pin: nozzle_mcu:PA3
uart_address: 3
run_current: 0.8
hold_current:0.4
sense_resistor: 0.0750
stealthchop_threshold: 99999
interpolate: True

[probe_ks1]
pin:PB15
x_offset:0
y_offset:0
#z_offset:-0.2
speed: 6.0
lift_speed: 6.0
samples: 2
sample_retract_dist: 2
samples_result: average
samples_tolerance: 0.1
samples_tolerance_retries:10

[bed_mesh]
speed: 120
fade_start: 1
fade_end: 10
fade_target: 0
horizontal_move_z:4
mesh_min: 15,15
mesh_max: 240,235
probe_count: 7,7
mesh_pps: 2,2
algorithm: bicubic
split_delta_z: 0.0125
adaptive_margin: 0

[safe_z_home]
home_xy_position: 127,127
speed: 200
z_hop: 15
z_hop_speed: 8.0

[verify_heater extruder]
max_error: 120
check_gain_time:30
hysteresis: 5
heating_gain:1

[verify_heater heater_bed]
max_error: 120
check_gain_time:300
hysteresis: 5
heating_gain:1

[controller_fan controller_fan]
pin: PB0
fan_speed: 1
idle_speed: 0
idle_timeout: 30

[heater_fan extruder_fan]
pin: nozzle_mcu:PB6
#tachometer_pin:nozzle_mcu:PB5

#[custom_temperture_fan]

[fan]
pin:nozzle_mcu:PB5
cycle_time:0.002
kick_start_time: 0.5
#tachometer_pin :nozzle_mcu:PB7

#[output_pin power_pin]
#pin:PB4
#value:1
#shutdown_value:0

[output_pin logo_light]
pin:  nozzle_mcu:PB9
pwm: False
shutdown_value: 0

[output_pin nozzle_light]
pin:  !nozzle_mcu:PA15
pwm: False
shutdown_value: 0

[pid_calibrate]
#fan_speed : 1

[lis2dw12]
spi_speed: 1000000
cs_pin: nozzle_mcu:PB12
spi_software_sclk_pin:nozzle_mcu:PB13
spi_software_mosi_pin:nozzle_mcu:PB15
spi_software_miso_pin:nozzle_mcu:PB14
rate:400
axes_map:x,y,z

[lis2dw12 bed]
spi_speed: 1000000
cs_pin: PA15
spi_software_sclk_pin:PC10
spi_software_mosi_pin:PC12
spi_software_miso_pin:PC11
rate:400
axes_map: y,x,z

[resonance_tester]
accel_chip_x: lis2dw12
accel_chip_y: lis2dw12 bed
probe_points:127, 127, 20
min_freq: 10
max_freq: 100
accel_per_hz: 150
hz_per_sec:2
#test_freq_start: 70
#test_freq_end: 80

[pause_resume]
#pause_position: 278,240
#z_up: 10
#bee_path: /sys/class/pwm/pwmchip0/pwm0/enable


[cs1237]
level_pin:nozzle_mcu:PA7
dout_pin:nozzle_mcu:PA6
sclk_pin:nozzle_mcu:PA5
register:60
sensitivity:-3000
head_block_sensitivity:-300000
scratch_sensitivity:-100000
self_check_sensitivity:-400
block_filament_sensitivity:-3000

[gcode_arcs]
resolution:1.0

[input_shaper]
shaper_freq_x: 60.0
shaper_freq_y: 60.0
shaper_type_x: mzv
shaper_type_y: mzv



[gcode_macro SINGLE_WIPE_NOZZLE]
gcode:
    G90 
    G1 X46 Y260 Z-0.8 F9600
    G1 X50 Y260 Z1 F9600
    G1 X86 Y260 Z1 F9600
    G1 X90 Y260 Z-0.8 F9600
    G1 X90 Y259 Z-0.8 F9600
    G1 X86 Y259 Z1 F9600
    G1 X50 Y259 Z1 F9600
    G1 X46 Y259 Z-0.8 F9600

[gcode_macro WIPE_NOZZLE]
gcode:
    G90
    M106 S255
    single_wipe_nozzle
    single_wipe_nozzle
    single_wipe_nozzle
    

[gcode_macro MOVE_HEAT_POS]
gcode:
    G90
    G1 Z15 F4800
    M400
    G1 X278 F9600
    

[gcode_macro UNDERLINE]
gcode:
    G90
    G92 E0
    G1 Y1 F2400
    G1 Z0.28
    G1 X180 E40 F500
    M400
    G92 E0
    G1 E-0.5 F300
    M400

[gcode_macro MOVE_END_POS]
gcode:
    G90
    G1 X5 Y242.25 F9600
    M400

#[gcode_macro M486]
#gcode:
#    {% if "T" in params %}
#      EXCLUDE_OBJECT RESET=1
#      EXCLUDE_OBJECT_SET_OBJ T={{ params.T }}
#    {% endif %}
#    
#    {% if params.C %}
#      EXCLUDE_OBJECT CURRENT=1
#    {% endif %}
#    
#    {% if params.P %}
#      EXCLUDE_OBJECT NAME={{ params.P }}
#    {% endif %}
#
#    {% if params.S %}
#      {% if params.S == "-1" %}
#        EXCLUDE_OBJECT_END_NO_OBJ
#      {% else %}
#        EXCLUDE_OBJECT_START NAME={{ params.S }}
#      {% endif %}
#    {% endif %}
#
#   {% if params.U %}
#      EXCLUDE_OBJECT RESET=1 NAME={{ params.U }}
#    {% endif %}    

[display_status]


[gcode_macro nozzle_light_on]
  gcode:
      SET_PIN PIN=nozzle_light VALUE=1

[gcode_macro nozzle_light_off]
  gcode:
      SET_PIN PIN=nozzle_light VALUE=0

[gcode_macro logo_light_on]
  gcode:
      SET_PIN PIN=logo_light VALUE=1

[gcode_macro logo_light_off]
  gcode:
      SET_PIN PIN=logo_light VALUE=0


[gcode_macro lights_off]
gcode:
    logo_light_off
    nozzle_light_off
    
[gcode_macro nozzle_light_toggle]
gcode:
    {% if printer["output_pin nozzle_light"].value == 0 %}
        nozzle_light_on
    {% else %}
        nozzle_light_off
    {% endif %}

[gcode_macro logo_light_toggle]
gcode:
    {% if printer["output_pin logo_light"].value == 0 %}
        logo_light_on
    {% else %}
        logo_light_off
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
  lights_off
  CANCEL_PRINT_BASE

# =======================
# G9111 — Startup Macro for Anycubic slicer compatibility
# =======================
[gcode_macro G9111]
description: "Startup: G9111 BEDTEMP=<°C> EXTRUDERTEMP=<°C> [WIPETEMP=<°C>]"
variable_travel_speed: 200  # mm/s
variable_wipe_temp: 170
gcode:
  # Helper: strip one leading '=' if present, then float
  {% set bed_raw = (params.BEDTEMP | default(params.S) | default("60")) | string %}
  {% set noz_raw = (params.EXTRUDERTEMP | default(params.T) | default("200")) | string %}
  {% set wipe_raw = (params.WIPETEMP | default(printer["gcode_macro G9111"].wipe_temp) | string) %}

  {% set BEDTEMP = (bed_raw | replace('=', '', 1)) | float %}
  {% set EXTRUDERTEMP = (noz_raw | replace('=', '', 1)) | float %}
  {% set WIPETEMP = (wipe_raw | replace('=', '', 1)) | float %}

  {% set f_travel = (printer["gcode_macro G9111"].travel_speed | float) * 60 %}

  { action_respond_info(
      "G9111: bed=%.1f°C, wipe=%.1f°C, final nozzle=%.1f°C, travel_speed=%.1f"
      % (BEDTEMP, WIPETEMP, EXTRUDERTEMP, f_travel)
    ) }

  logo_light_on
  # Set temps
  RESPOND TYPE=echo MSG="Nowait pre-heat for nozzle wipe"
  M104 S{WIPETEMP}
  M140 S{BEDTEMP}

  RESPOND TYPE=echo MSG="Home"
  G28

  RESPOND TYPE=echo MSG="Wait for pre-heat temp reached"
  MOVE_HEAT_POS
  # Wait to wipe temp
  M109 S{WIPETEMP}
  RESPOND TYPE=echo MSG="Wipe nozzle"
  WIPE_NOZZLE

  RESPOND TYPE=echo MSG="Homing"
  G90
  G28 Z
  M106 S255
  
  
  RESPOND TYPE=echo MSG="(Adaptive) bed mesh"
  BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1
    
  # Final nozzle temp (wait)
  nozzle_light_on
  RESPOND TYPE=echo MSG="Heat nozzle to print temperature"
  M106 S0
  MOVE_HEAT_POS
  M109 S{EXTRUDERTEMP}
  
  RESPOND TYPE=echo MSG="Prime nozzle"
  G92 E0
  G1 E80 F300
  G1 E80 F150

  RESPOND TYPE=echo MSG="Wipe nozzle after purge"
  WIPE_NOZZLE
  G91
  G1 Z2 F1000
  
  G92 E0
  G1 E-1 F7000
  G92 E0
  
  RESPOND TYPE=echo MSG="Purge line"
  UNDERLINE

  RESPOND TYPE=echo MSG="G9111 complete."

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe_ks1]
#*# z_offset = -0.100
